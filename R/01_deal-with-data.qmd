---
title: "Data wrangling"
format: html
params:
    reserve: "GTM"
---

## Setup  

```{r, warning = FALSE}
library(readxl)
library(tidyverse)

file_dat <- here::here("data", paste0(params$reserve, "_NMST.xlsx"))
file_specs <- here::here("metadata", paste0(params$reserve, "veg_metadata.xlsx"))

source(here::here("R", "functions.R"))
```

## Prepare data frames  

### Read in  

```{r}
dat <- get_data(file_dat, cover_only = TRUE) # gets rid of density and height columns; keeps F_ columns
stn_tbl <- get_stn_table(file_dat)
species_info <- get_species_info(file_dat)
eis <- get_eis(file_specs)  # ecotone invaders
```

### Remove Unsampled Plots  

```{r}
dat <- remove_unsampleds(dat)
```


### Replace NA cover readings with 0  

```{r}
dat <- na_to_0(dat)
```


### Remove data points that don't pass QA/QC checks  


DO THIS  

+  identify columns starting with F_  
+  identify non-NAs in columns starting with F_  
+  identify which species columns and rows match affected F_ columns  
+  replace those values with NA  

```{r}
data <- dat

qaqc_cols <- which(stringr::str_starts(names(data), "F_"))

for(i in seq_along(qaqc_cols)){
    data[i]
}

```

```{r}
# modified from SWMPr::qaqcchk()
# https://github.com/fawda123/SWMPr/blob/master/R/qaqcchk.R
 # qaqc flag columns
  qaqc_ind <- grep('^F_', names(data))
  qaqc <- data[, qaqc_ind]
  
  # summarize number of qaqc flags by column
  out <- lapply(c(qaqc), table)
  
  # format output as data.frame
  out <- reshape2::melt(out)
  names(out) <- c('flag', 'count', 'variable')
  out <- tidyr::spread(out, 'variable', 'count')
  out[is.na(out)] <- 0
  
```


```{r}
# or from SWMPr::qaqc  
# https://github.com/fawda123/SWMPr/blob/master/R/qaqc.R
# which seems to match positionally, which in theory will work on our data frames but in practice I'm too worried about copy-paste errors in the F_ columns so I'd rather match by name

# but the structure could work - splitting off the qaqc columns
# especially if I then strip "F_" from the column name  

```

```{r}
qaqc_cols_start <- which(str_starts(names(data), "F_"))[1]

data_alone <- data[, 1:(qaqc_cols_start-1)]
qaqc_cols <- data[, qaqc_cols_start:ncol(data)]

outs <- list()
for(i in seq_along(qaqc_cols)){
    non_na <- which(!is.na(qaqc_cols[, i]))
    vals <- qaqc_cols[non_na, i]
    tmp <- data.frame(Species = rep(names(qaqc_cols)[i], nrow(vals)),
                          Rows = non_na,
                          Codes = vals)
    names(tmp)[3] <- "Codes"
    outs[[i]] <- tmp
}
```



### add Vegetation Zone to dat  

```{r}
dat <- join_zones(dat, stn_tbl)
```


## Calculate group totals  

```{r}
cat_sums <- sum_spp_categories()
```

### Join to sampling info  

```{r}
dat_summ <- cbind(dat[, 1:which(names(dat) == "Notes")], cat_sums)
names(dat_summ)[which(is.na(names(dat_summ)))] <- "Other"
```

### Pivot longer for easier plotting  

```{r}
dat_summ2 <- dat_summ %>% 
    pivot_longer(-(Reserve:Notes),
                 names_to = "Group",
                 values_to = "Cover")
```

Need to do something about NMST abiotic categories, unknown species, unvegetated, etc.  

Probably want data frames by:  

-  species (original)  
-  vegetation group  
-  with custom metrics  


## Plot groups through time  


```{r}
plot_through_time(data = dat_summ2, group = Group, panels = Vegetation_Zone) + ggtitle("By Zone")
```

```{r}
plot_through_time(data = dat_summ2, group = Group, panels = SiteID) + ggtitle("By Site")
```

```{r}
plot_through_time(data = dat_summ2, group = Vegetation_Zone, panels = Group) + ggtitle("By Species Group")
```


Test that function out on raw species data  

Too many species (but this is why we had Reserves identify which ones are most important)  

```{r}
# dat_long <- dat %>% 
#     select(-starts_with("F"),
#            -starts_with("Average Canopy Height"),
#            -starts_with("Density")) %>% 
#     pivot_longer(-(Reserve:Notes),
#                  names_to = "Species",
#                  values_to = "Cover")
# 
# plot_through_time(data = dat_long,
#           group = Species,
#           panels = Vegetation_Zone)
```

## Plot overall  

(same as above, just not by zone or site - all on one)  

```{r}
ggplot(dat_summ2, aes(x = Year, y = Cover, 
                     group = Group, color = Group, fill = Group)) +
        geom_point() +
        geom_smooth(method = "loess", se = FALSE) +
    ggtitle("across all plots")
```



***  
***  

# Alternate - long first  

Pivot longer, then add in zones, species groups, and Ecotone Invaders  

```{r}
dat2 <- get_data(file_dat)

dat_long <- dat2 %>% 
    select(-starts_with("F"),
           -starts_with("Average Canopy Height"),
           -starts_with("Maximum Canopy Height"),
           -starts_with("Density")) %>%
    pivot_longer(-(Reserve:Notes),
                 names_to = "Species",
                 values_to = "Cover") 
```


## Add zones  

```{r}
dat_long2 <- join_zones(dat_long, stn_tbl)
```


## Add Ecotone Invader column  

```{r}
dat_long2 <- left_join(dat_long2, eis)
```

